{{- if and .Values.initDB.enabled  .Values.sink.mysql.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "common.names.fullname" . }}-initdb-sql
  namespace: {{ .Release.Namespace }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
  initdb.sql: |
{{- if .Values.initDB.force }}
    DROP DATABASE IF EXISTS `{{- .Values.sink.mysql.database -}}`;
{{- end }}
    CREATE DATABASE IF NOT EXISTS `{{- .Values.sink.mysql.database -}}` /*!40100 DEFAULT CHARACTER SET utf8mb4 */;
    USE `{{- .Values.sink.mysql.database -}}`;
    create table kube_eventer
    (
    id               bigint(20)   not null auto_increment primary key comment 'event primary key',
    name             varchar(64)  not null default '' comment 'event name',
    namespace        varchar(64)  not null default '' comment 'event namespace',
    event_id         varchar(64)  not null default '' comment 'event_id',
    type             varchar(64)  not null default '' comment 'event type Warning or Normal',
    reason           varchar(64)  not null default '' comment 'event reason',
    message          text  not null  comment 'event message' ,
    kind             varchar(64)  not null default '' comment 'event kind' ,
    first_occurrence_time   varchar(64)    not null default '' comment 'event first occurrence time',
    last_occurrence_time    varchar(64)    not null default '' comment 'event last occurrence time',
    unique index event_id_index (event_id)
    ) ENGINE = InnoDB default CHARSET = utf8mb4 comment ='Event info tables';
{{- end }}
